<div class="container-fluid">
  <div class="nav col-md-12 action-form">
    <div class="nav flex-column nav-pills col-md-5 col-lg-4 col-xl-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
      <% @types.each do |type| %>
        <a class="nav-link action-btn-active" id="v-pills-home-tab" data-toggle="pill"
          href="#v-pills-home" role="tab" aria-controls="v-pills-home" aria-selected="false"><%= type %></a>
      <% end %>
      <% if current_page?(mobilizations_path)%>
        <a class="nav-link action-btn-active" id="v-pills-home-tab" data-toggle="pill"
           href="#v-pills-home" role="tab" aria-controls="v-pills-home" aria-selected="false">Social Media Blitzing</a>
      <% end %>
    </div>
    <div class="tab-content col-md-6 action-form-content">
      <div class="tab-pane fade show active" id="tab-container" role="tabpanel" aria-labelledby="v-pills-home-tab">
        <div class="report-form-body" id="hide-when-type-selected">
          <div class="default-tab-text">Form will appear here</div>
        </div>
        <% if current_page?(arrestable_actions_path) || current_page?(mobilizations_path)%>
          <h2 id="form-title"></h2>
          <%= yield %>
        <% else %>
          <div class="report-form-body" id="hide-until-type-selected">
            <%= yield %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
(() => {
  const navLinks = document.getElementsByClassName('nav-link');
  const type = '<%= params[:training_type] || params[:type] || params[:type_arrestable_action] || params[:mobilization_type] || params[:social_media_blitzing_type] || params[:street_swarm_type]  ||'' %>';

  const startFormWithType = (navLink, shouldClearForm) => {
    setFormType(navLink.textContent);
    shouldClearForm && clearFormFields();
    unselectAllNavLinks();
    selectNavLink(navLink);
    showForm(navLink.textContent);
  };

  const setFormType = type => {
      document.getElementById('form-title').innerHTML = type;
      if(type === 'Street Swarms') {
          document.getElementById('street-type-input').value = type;
      } else if (type === 'Social Media Blitzing') {
          document.getElementById('blitz-type-input').value = type;
      }
      document.getElementById('training-type-input').value = type;
  };

  const clearFormFields = () => {
    for (const clearable of document.getElementsByClassName('clearable')) {
      clearable.value = "";
    }
  };

  const unselectAllNavLinks = () => {
    for(const navLinkToModify of navLinks) {
      navLinkToModify.classList.remove('active');
      navLinkToModify.setAttribute('aria-selected', false);
    }
  };

  const selectNavLink = navLink => {
    navLink.classList.add('active');
    navLink.setAttribute('aria-selected', true);
  };

  const showForm = (navLink) => {
      const swarmForm = document.getElementById('swarm-form-body')
      const blitzForm = document.getElementById('blitz-form-body')
      const arrestableForm = document.getElementById('arrestable-form-body')
      const mobilizationForm = document.getElementById('mobilization-form-body')
      const url = window.location.href

      document.getElementById('tab-container').style.display = 'block';
      document.getElementById('hide-when-type-selected').style.display = 'none';

      if(url.includes('forms/actions')) {
          if(navLink === "Street Swarms") {
              swarmForm.style.display = "block";
              arrestableForm.style.display = "none";
          } else {
              swarmForm.style.display = "none";
              arrestableForm.style.display = "block";
          }
      } else if (url.includes('forms/mobilization')) {
          if(navLink === "Social Media Blitzing") {
              blitzForm.style.display = "block";
              mobilizationForm.style.display = "none";
          } else {
              blitzForm.style.display = "none";
              mobilizationForm.style.display = "block";
          }
      } else {
          document.getElementById('hide-until-type-selected').style.display = 'block';
      }
  };

  for(const navLink of navLinks) {
    navLink.addEventListener('click', e => {
      startFormWithType(navLink, true);
    });

    if(navLink.textContent === type) {
      startFormWithType(navLink, false);
    }
  }
})();
</script>