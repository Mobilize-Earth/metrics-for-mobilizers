<div class="table-responsive report-table-container ">
  <table class="table report-table">
    <thead>
    <tr>
      <th scope="col" xr-table-key=""></th>
      <th scope="col" xr-table-key="members">Members</th>
      <th scope="col" xr-table-key="chapters">Chapters</th>
      <th scope="col" xr-table-key="sign_ons">Sign ons</th>
      <th scope="col" xr-table-key="trainings">Trainings</th>
      <th scope="col" xr-table-key="arrestable_pledges">Arrestable Pledges</th>
      <th scope="col" xr-table-key="actions">Actions</th>
    </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<script>
    (() => {
        const currentUrl = new URL(window.location.href);
        const country = currentUrl.pathname.split('/')[2]; //get country id from url
        const state = currentUrl.pathname.split('/')[3]; //get state id from url

        let groupByProperty = 'country';
        let groupByLabel = 'Country';
        let queryParams = {};
        if (country) {
            queryParams.country = country;
            groupByProperty = 'state';
            groupByLabel = 'State';
        }

        if (state) {
            queryParams.state = state;
            groupByProperty = 'chapter';
            groupByLabel = 'Chapter';
        }

        setGroupByHeaderLabel();
        makeTableSortable();

        let data = {};

        $.getJSON('<%= report_table_path %>', queryParams, function (result) {
            data = result.sort((x, y) => y.members- x.members);
            renderTableBody(result);
        });

        function setGroupByHeaderLabel() {
            let groupByColHeader = $("table.report-table thead tr th").first();
            groupByColHeader.text(groupByLabel);
            groupByColHeader.attr('xr-table-key', groupByProperty);
        }

        function makeTableSortable() {
            let tableHead = $("table.report-table thead");
            tableHead.find("tr th").click(function () {
                let orderAsc = $(this).attr("asc");
                if (orderAsc) {
                    $(this).removeAttr("asc");
                    orderAsc = false;
                } else {
                    $(this).attr("asc", "true");
                    orderAsc = true;
                }
                sortBy($(this).attr("xr-table-key"), orderAsc);
            });
        }

        const sortString = (x, y, asc) => asc ? (""+x).localeCompare(y) : (""+y).localeCompare(x);
        const sortNumber = (x, y, asc) => asc ? x - y : y - x;

        function sortBy(columnName, asc) {
            let sort = isNaN(data[0][columnName])? sortString:sortNumber;
            let order = (x, y) => {
                return sort(x[columnName],y[columnName],asc);
            };
            data = data.sort(order);
            renderTableBody(data);
        }

        const record = (obj) => {
            let link = `/reports`;
            if (country) link += `/${country}`;
            if (state) link = `/chapters`;
            link += `/${obj.id}`;

            return `<tr>
                      <td scope="row"><a href=${link}>${obj[groupByProperty]}</a></td>
                      <td>${obj.members}</td>
                      <td>${obj.chapters}</td>
                      <td>${obj.sign_ons}</td>
                      <td>${obj.trainings}</td>
                      <td>${obj.arrestable_pledges}</td>
                      <td>${obj.actions}</td>
                    </tr>`
        };

        const tableBody = $("table.report-table tbody");

        function renderTableBody(data) {
            tableBody.empty();
            $.each(data, function (i, v) {
                tableBody.append(record(v));
            });
        }

    })();
</script>